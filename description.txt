// branch protection rules 
// git/github/gitlab
//divergent branches
//hotfix, bugfix, release

base branch - main/master


main->stage->feature/intial-setup
stage->feature/feature-name2
stage->feature/feature-name3


after merging all the sub-branches back to the stage, then

main->release

all stage changes to release

release->main


** git alternatives : AWS CodeCommit, Helix Core, Azure DevOps Server
** Top GitHub Enterprise Alternatives : GitLab, Bitbucket
** git vs github : Git is a software.	GitHub is a service.
** git pull vs fetch : https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/Git-pull-vs-fetch-Whats-the-difference 
** git stash : https://www.youtube.com/watch?v=ts3qntjhgxI
** git --continue
** current change and incoming change


new branch -> add changes -> git add -> git commit -> git checkout to previous branch -> git merge newBranch


// ***************** Remove directory from remote repository after adding them to .gitignore

// ** I committed and pushed some directory to github. After that, I altered the .gitignore file adding a directory that should be ignored. Everything works fine, but the (now ignored) directory stays on github.


Solution refernce link: https://stackoverflow.com/questions/7927230/remove-directory-from-remote-repository-after-adding-them-to-gitignore

Solution: 
git rm -r --cached some-directory
git commit -m 'Remove the now ignored directory "some-directory"'
git push origin master



// ******************* To customize your terminal prompt to show the current Git branch name, you can modify your shell configuration. Here’s how to do it for zsh:

Option 1: Using oh-my-zsh
If you’re not already using it, consider installing Oh My Zsh, which makes customizing your prompt easier:

Install Oh My Zsh:

If you don’t have it installed, you can do so with this command:

** bash **

sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

Change Theme:

Oh My Zsh comes with themes that show the current Git branch by default. You can set a theme like agnoster or powerlevel10k. To change the theme:

Open your .zshrc:
** bash **

nano ~/.zshrc
Find the line that starts with ZSH_THEME= and change it to one of the themes that display the branch name, e.g.:

** bash **

ZSH_THEME="agnoster"
Save and exit (Ctrl + O, then Enter, then Ctrl + X).

Source the Configuration:

Run:

** bash **
source ~/.zshrc



***** 1. Forking a repo from GitHub and then create a branch to make changes and then create a pull request to merge.

Step 1: Fork the Repository
Go to the GitHub repository you want to contribute to.
Click the “Fork” button in the upper right corner to create a copy of the repository in your GitHub account.
Step 2: Clone Your Forked Repository
Clone your forked repository to your local machine:

**bash

git clone <your-fork-url>
Navigate into the cloned repository:


**bash

cd <repository-name>
Step 3: Add the Original Repository as a Remote
This allows you to keep your fork updated with the original repository:

**bash

git remote add upstream <original-repo-url>
Step 4: Create a New Branch
Create a new branch for your work:

**bash
git checkout -b your-branch-name
Step 5: Add Your Work Files
Make your changes or add new files. Then stage the changes:

**bash
git add <file1> <file2> ...
Or to add all changes:

**bash
git add .
Step 6: Commit Your Changes
Commit your changes with a descriptive message:

**bash
git commit -m "Add description of changes"
Step 7: Push Your Branch to Your Fork
Push your branch to your GitHub fork:

**bash
git push origin your-branch-name

Step 8: Create a Pull Request
Go to your forked repository on GitHub.
You should see a prompt to create a pull request for your newly pushed branch. Click on "Compare & pull request."
Ensure that the base repository is set to the original repository and the base branch is the main branch (or the appropriate branch). Your head repository should be your fork and your new branch.
Fill in the title and description for the pull request, then click "Create pull request."